@model IEnumerable<Inyama_Yethu.Models.Feeding>

@{
    ViewData["Title"] = "Feed Report";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    
    var startDate = (DateTime)ViewData["StartDate"];
    var endDate = (DateTime)ViewData["EndDate"];
    var feedTypeStats = ViewData["FeedTypeStats"] as IEnumerable<dynamic>;
    var animalTypeStats = ViewData["AnimalTypeStats"] as IEnumerable<dynamic>;
    var totalQuantity = (double)ViewData["TotalQuantity"];
    var totalCost = (double)ViewData["TotalCost"];
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Feed Consumption Report</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Admin/Dashboard">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="/Admin/FeedManagement">Feed Management</a></li>
        <li class="breadcrumb-item active">Feed Report</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-filter me-1"></i>
            Report Filter
        </div>
        <div class="card-body">
            <form asp-action="Report" method="get" class="row g-3">
                <div class="col-md-4">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" id="startDate" name="startDate" class="form-control" value="@startDate.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-4">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" id="endDate" name="endDate" class="form-control" value="@endDate.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i> Generate Report
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Feed Type Distribution
                </div>
                <div class="card-body">
                    <canvas id="feedTypeChart" width="100%" height="40"></canvas>
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Animal Type Distribution
                </div>
                <div class="card-body">
                    <canvas id="animalTypeChart" width="100%" height="40"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-table me-1"></i>
                    Feed Type Summary
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Feed Type</th>
                                    <th>Quantity (kg)</th>
                                    <th>Cost (ZAR)</th>
                                    <th>Avg. Cost/kg</th>
                                    <th>% of Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (feedTypeStats != null && feedTypeStats.Any())
                                {
                                    foreach (var stat in feedTypeStats)
                                    {
                                        var percentOfTotal = totalQuantity > 0 ? (stat.TotalQuantity * 100 / totalQuantity) : 0;
                                        
                                        <tr>
                                            <td>@stat.FeedType</td>
                                            <td>@stat.TotalQuantity.ToString("F1") kg</td>
                                            <td>R @stat.TotalCost.ToString("N2")</td>
                                            <td>R @stat.AverageCostPerKg.ToString("F2")</td>
                                            <td>
                                                <div class="progress">
                                                    <div class="progress-bar bg-primary" role="progressbar" 
                                                         style="width: @(percentOfTotal.ToString("F1"))%;" 
                                                         aria-valuenow="@percentOfTotal" 
                                                         aria-valuemin="0" 
                                                         aria-valuemax="100">
                                                        @(percentOfTotal.ToString("F1"))%
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" class="text-center">No feed data available for the selected period.</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr class="table-dark">
                                    <th>Total</th>
                                    <th>@totalQuantity.ToString("F1") kg</th>
                                    <th>R @totalCost.ToString("N2")</th>
                                    <th>R @(totalQuantity > 0 ? (totalCost / totalQuantity).ToString("F2") : "0.00")</th>
                                    <th>100%</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-table me-1"></i>
                    Animal Type Summary
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Animal Type</th>
                                    <th>Quantity (kg)</th>
                                    <th>Cost (ZAR)</th>
                                    <th>Avg. per Animal</th>
                                    <th>% of Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (animalTypeStats != null && animalTypeStats.Any())
                                {
                                    foreach (var stat in animalTypeStats)
                                    {
                                        var percentOfTotal = totalQuantity > 0 ? (stat.TotalQuantity * 100 / totalQuantity) : 0;
                                        
                                        <tr>
                                            <td>@stat.AnimalType</td>
                                            <td>@stat.TotalQuantity.ToString("F1") kg</td>
                                            <td>R @stat.TotalCost.ToString("N2")</td>
                                            <td>@stat.AvgQuantityPerAnimal.ToString("F1") kg</td>
                                            <td>
                                                <div class="progress">
                                                    <div class="progress-bar bg-success" role="progressbar" 
                                                         style="width: @(percentOfTotal.ToString("F1"))%;" 
                                                         aria-valuenow="@percentOfTotal" 
                                                         aria-valuemin="0" 
                                                         aria-valuemax="100">
                                                        @(percentOfTotal.ToString("F1"))%
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" class="text-center">No feed data available for the selected period.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Detailed Feeding Records
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="feedingRecordsTable" class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Animal</th>
                            <th>Feed Type</th>
                            <th>Quantity (kg)</th>
                            <th>Cost/kg</th>
                            <th>Total Cost</th>
                            <th>Notes</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.FeedDate.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>@item.Animal.TagNumber</td>
                                <td>@item.FeedType</td>
                                <td>@item.Quantity.ToString("F1") kg</td>
                                <td>R @item.CostPerKg.ToString("F2")</td>
                                <td>R @((item.Quantity * (double)item.CostPerKg).ToString("F2"))</td>
                                <td>@item.Notes</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.font.family = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.color = '#212529';

        // Feed Type Chart
        var feedTypeCtx = document.getElementById("feedTypeChart");
        
        // Create safe arrays to handle potential null data
        var feedTypeLabels = [];
        var feedTypeValues = [];
        
        @if (feedTypeStats != null && feedTypeStats.Any())
        {
            foreach (var stat in feedTypeStats)
            {
                <text>
                feedTypeLabels.push('@stat.FeedType');
                feedTypeValues.push(@stat.TotalQuantity);
                </text>
            }
        }
        
        var feedTypeData = {
            labels: feedTypeLabels,
            datasets: [{
                data: feedTypeValues,
                backgroundColor: [
                    '#007BFF', '#28A745', '#FFC107', '#DC3545', '#17A2B8', '#6C757D', '#343A40',
                    '#6610F2', '#6F42C1', '#E83E8C', '#FD7E14', '#20C997', '#6C757D', '#343A40'
                ]
            }]
        };
        new Chart(feedTypeCtx, {
            type: 'pie',
            data: feedTypeData,
            options: {
                plugins: {
                    legend: {
                        position: 'right'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                var label = context.label || '';
                                var value = context.raw || 0;
                                var total = context.dataset.data.reduce((a, b) => a + b, 0);
                                var percentage = Math.round((value / total) * 100);
                                return label + ': ' + value.toFixed(1) + 'kg (' + percentage + '%)';
                            }
                        }
                    }
                }
            }
        });

        // Animal Type Chart
        var animalTypeCtx = document.getElementById("animalTypeChart");
        
        // Create safe arrays to handle potential null data
        var animalTypeLabels = [];
        var animalTypeValues = [];
        
        @if (animalTypeStats != null && animalTypeStats.Any())
        {
            foreach (var stat in animalTypeStats)
            {
                <text>
                animalTypeLabels.push('@stat.AnimalType');
                animalTypeValues.push(@stat.TotalQuantity);
                </text>
            }
        }
        
        var animalTypeData = {
            labels: animalTypeLabels,
            datasets: [{
                data: animalTypeValues,
                backgroundColor: [
                    '#28A745', '#007BFF', '#FFC107', '#DC3545', '#17A2B8', '#6C757D', '#343A40',
                    '#6610F2', '#6F42C1', '#E83E8C', '#FD7E14', '#20C997', '#6C757D', '#343A40'
                ]
            }]
        };
        new Chart(animalTypeCtx, {
            type: 'pie',
            data: animalTypeData,
            options: {
                plugins: {
                    legend: {
                        position: 'right'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                var label = context.label || '';
                                var value = context.raw || 0;
                                var total = context.dataset.data.reduce((a, b) => a + b, 0);
                                var percentage = Math.round((value / total) * 100);
                                return label + ': ' + value.toFixed(1) + 'kg (' + percentage + '%)';
                            }
                        }
                    }
                }
            }
        });

        // Initialize DataTable
        $(document).ready(function () {
            $('#feedingRecordsTable').DataTable({
                order: [[0, 'desc']],
                pageLength: 10,
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]]
            });
        });
    </script>
} 